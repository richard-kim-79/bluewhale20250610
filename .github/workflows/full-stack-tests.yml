name: Full Stack Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov
        
    - name: Set environment variables
      run: |
        echo "ENVIRONMENT=test" >> $GITHUB_ENV
        echo "MONGODB_URL=mongodb://localhost:27017/bluewhale_test" >> $GITHUB_ENV
        echo "CSRF_SECRET_KEY=test_csrf_secret_key" >> $GITHUB_ENV
        echo "JWT_SECRET_KEY=test_jwt_secret_key" >> $GITHUB_ENV
        
    - name: Run backend tests
      working-directory: ./backend
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml
        
    - name: Upload backend coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        fail_ci_if_error: false

  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
        
    - name: Run linting
      working-directory: ./frontend
      run: npm run lint
      
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --coverage
      
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        fail_ci_if_error: false
